
/* SENSOR FULL SIZE */
#ifndef __OV5645PIP_SENSOR_H
#define __OV5645PIP_SENSOR_H


typedef enum _OV5645PIP_OP_TYPE_ {
        OV5645PIP_MODE_NONE,
        OV5645PIP_MODE_PREVIEW,
        OV5645PIP_MODE_CAPTURE,
        OV5645PIP_MODE_QCIF_VIDEO,
        OV5645PIP_MODE_CIF_VIDEO,
        OV5645PIP_MODE_QVGA_VIDEO
    } OV5645PIP_OP_TYPE;

enum {
    OV5645_MID_SUNNY = 0x01,
    OV5645_MID_TRULY,
    OV5645_MID_A_KERR,
    OV5645_MID_LITEARRAY,
    OV5645_MID_DARLING, //5
    OV5645_MID_QTECH,
    OV5645_MID_OFLIM,
    OV5645_MID_HUAQUAN_KINGCOM,
    OV5645_MID_MAX
};

enum {
    OV5645_LENS_ID_LARGAN9516 = 0x01,
    OV5645_LENS_ID_LARGAN40001 = 0x02,
    OV5645_LENS_ID_T1516 = 0x0A,
    OV5645_LENS_ID_HOKUANG_GBCA2085201 = 0x0C,
    OV5645_LENS_ID_HOKUANG_GBCA2128201 = 0x3D,
    OV5645_LENS_ID_LARGAN30021A1B = 0x33,
    OV5645_LENS_ID_SHUNYU_3515 = 0x36,
    OV5645_LENS_ID_EP_D420F00 = 0x3B,
    OV5645_LENS_ID_CHT_833C2008 = 0xFF,
    OV5645_LENS_ID_LARGAN9467A8_0 = 0x42,
    OV5645_LENS_ID_LARGAN9467A8 = 0x43,
    OV5645_LENS_ID_UNKNOW_FOR_DARLING_AF = 0x8D,
    OV5645_LENS_ID_UNKNOW_FOR_DARLING_FF0 = 0x89,
    OV5645_LENS_ID_UNKNOW_FOR_DARLING_FF1 = 0x00,
    OV5645_LENS_ID_MAX,
};

extern OV5645PIP_OP_TYPE OV5645PIP_g_iOV5645PIP_Mode;

#define OV5645PIP_ID_REG                          (0x300A)
#define OV5645PIP_INFO_REG                        (0x300B)
 
/* sensor size */
#define OV5645PIP_IMAGE_SENSOR_720P_WIDTH          (1280)
#define OV5645PIP_IMAGE_SENSOR_720P_HEIGHT         (720)
#define OV5645PIP_IMAGE_SENSOR_QSXGA_WITDH        (2560) 
#define OV5645PIP_IMAGE_SENSOR_QSXGA_HEIGHT       (1440)
#define OV5645PIP_IMAGE_SENSOR_VIDEO_WITDH         (1280)
#define OV5645PIP_IMAGE_SENSOR_VIDEO_HEIGHT        (960)
#define OV5645PIP_IMAGE_SENSOR_SVGA_WIDTH          (1280)
#define OV5645PIP_IMAGE_SENSOR_SVGA_HEIGHT         (960)

/* Sesnor Pixel/Line Numbers in One Period */	
#define OV5645PIP_PV_PERIOD_PIXEL_NUMS    		(2160)  		/* Default preview line length */
#define OV5645PIP_PV_PERIOD_LINE_NUMS     		(740)   	/* Default preview frame length */
#define OV5645PIP_FULL_PERIOD_PIXEL_NUMS  		(2984)  	/* Default full size line length */
#define OV5645PIP_FULL_PERIOD_LINE_NUMS   		(1464)  	/* Default full size frame length */

/* Sensor Exposure Line Limitation */
#define OV5645PIP_PV_EXPOSURE_LIMITATION      	(740-4)
#define OV5645PIP_FULL_EXPOSURE_LIMITATION    	(1464-4)

/* Config the ISP grab start x & start y, Config the ISP grab width & height */
#define OV5645PIP_PV_GRAB_START_X   (1)
#define OV5645PIP_PV_GRAB_START_Y  			(1)
#define OV5645PIP_PV_GRAB_WIDTH				(OV5645PIP_IMAGE_SENSOR_720P_WIDTH - 8)
#define OV5645PIP_PV_GRAB_HEIGHT				(OV5645PIP_IMAGE_SENSOR_720P_HEIGHT - 6)

#define OV5645PIP_FULL_GRAB_START_X     (1)
#define OV5645PIP_FULL_GRAB_START_Y	  		(1)
#define OV5645PIP_FULL_GRAB_WIDTH				(OV5645PIP_IMAGE_SENSOR_QSXGA_WITDH - 16)
#define OV5645PIP_FULL_GRAB_HEIGHT				(OV5645PIP_IMAGE_SENSOR_QSXGA_HEIGHT - 12)

/*50Hz,60Hz*/
#define OV5645PIP_NUM_50HZ                        (50 * 2)
#define OV5645PIP_NUM_60HZ                        (60 * 2)

/* FRAME RATE UNIT */
#define OV5645PIP_FRAME_RATE_UNIT                 (10)

/* MAX CAMERA FRAME RATE */
#define OV5645PIP_MAX_CAMERA_FPS                  (OV5645PIP_FRAME_RATE_UNIT * 30)


/* DUMMY NEEDS TO BE INSERTED */
/* SETUP TIME NEED TO BE INSERTED */


/* SENSOR READ/WRITE ID */
	#define OV5645PIP_WRITE_ID						    0x78
	#define OV5645PIP_READ_ID								0x79
	

//export functions
UINT32 OV5645PIPOpen(void);
UINT32 OV5645PIPGetResolution(MSDK_SENSOR_RESOLUTION_INFO_STRUCT *pSensorResolution);
UINT32 OV5645PIPGetInfo(MSDK_SCENARIO_ID_ENUM ScenarioId, MSDK_SENSOR_INFO_STRUCT *pSensorInfo, MSDK_SENSOR_CONFIG_STRUCT *pSensorConfigData);
UINT32 OV5645PIPControl(MSDK_SCENARIO_ID_ENUM ScenarioId, MSDK_SENSOR_EXPOSURE_WINDOW_STRUCT *pImageWindow, MSDK_SENSOR_CONFIG_STRUCT *pSensorConfigData);
UINT32 OV5645PIPFeatureControl(MSDK_SENSOR_FEATURE_ENUM FeatureId, UINT8 *pFeaturePara,UINT32 *pFeatureParaLen);
UINT32 OV5645PIPClose(void);

UINT32 OV5645PIP_YUV_SensorInit(PSENSOR_FUNCTION_STRUCT *pfFunc);

#endif /* __SENSOR_H */
